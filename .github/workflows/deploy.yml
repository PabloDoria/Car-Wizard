name: Deploy Laravel to AWS

on:
  push:
    branches:
      - main  # Se ejecuta en push a main
      - dev   # También en dev (si quieres)
  workflow_dispatch:  # Permite ejecución manual

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: car-wizard
  ECS_CLUSTER: car-wizard-cluster
  ECS_SERVICE: car-wizard-service
  ECS_TASK_DEFINITION: ecs/task-definition.json
  LAMBDA_FUNCTION_NAME: LoadDataLambda

jobs:
  deploy:
    runs-on: ubuntu-latest # ⚡ IMPORTANTE: usa Windows en GitHub Actions

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform -chdir=terraform init

      - name: Terraform Plan
        run: terraform -chdir=terraform plan -out=tfplan

      - name: Terraform Apply
        run: terraform -chdir=terraform apply -auto-approve tfplan

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get AWS Account ID
        shell: pwsh
        run: |
          $AWS_ACCOUNT_ID = (aws sts get-caller-identity --query Account --output text)
          echo "AWS_ACCOUNT_ID=$AWS_ACCOUNT_ID" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Build and push Docker image
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          ECR_REPOSITORY: "car-wizard"
          IMAGE_TAG: ${{ github.sha }}
        shell: pwsh
        run: |
          $ECR_REGISTRY="${env:AWS_ACCOUNT_ID}.dkr.ecr.${env:AWS_REGION}.amazonaws.com"
          docker build -t $ECR_REGISTRY/$env:ECR_REPOSITORY:$env:IMAGE_TAG -f docker/Dockerfile .
          docker tag $ECR_REGISTRY/$env:ECR_REPOSITORY:$env:IMAGE_TAG $ECR_REGISTRY/$env:ECR_REPOSITORY:$env:IMAGE_TAG
          docker push $ECR_REGISTRY/$env:ECR_REPOSITORY:$env:IMAGE_TAG


      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          cluster: ${{ env.ECS_CLUSTER }}
          service: ${{ env.ECS_SERVICE }}
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          wait-for-service-stability: true
