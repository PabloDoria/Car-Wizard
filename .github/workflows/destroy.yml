name: Destroy Infrastructure

on:
  workflow_dispatch:  # Permite ejecución manual desde GitHub

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1
  TF_VAR_rds_password: ${{ secrets.RDS_PASSWORD }}

jobs:
  terraform-destroy:
    name: Destroy Infrastructure
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Delete ECS Services
        run: |
          CLUSTER_NAME="car-wizard-cluster"
          SERVICE_NAME="car-wizard-service"
          
          # Escalar el servicio a 0
          aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --desired-count 0 || true
          
          # Esperar a que los tasks se detengan
          aws ecs wait services-inactive --cluster $CLUSTER_NAME --services $SERVICE_NAME || true
          
          # Eliminar el servicio
          aws ecs delete-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --force || true

      - name: Delete Lambda Function
        run: |
          # Eliminar permisos y triggers primero
          aws events remove-targets --rule trigger-car-data-update --ids TriggerLambda || true
          aws events delete-rule --name trigger-car-data-update || true
          aws lambda delete-function --function-name LoadDataLambda || true

      - name: Terraform Destroy
        working-directory: terraform
        run: terraform destroy -auto-approve

      - name: Clean up ECR Repository
        if: always()
        run: |
          # Eliminar todas las imágenes del repositorio
          REPO_NAME="car-wizard"
          aws ecr list-images --repository-name $REPO_NAME --query 'imageIds[*]' --output json | \
          jq -r '.[] | [.imageDigest] | @tsv' | \
          while read digest; do
            aws ecr batch-delete-image --repository-name $REPO_NAME --image-ids imageDigest=$digest || true
          done
          
          # Eliminar el repositorio
          aws ecr delete-repository --repository-name $REPO_NAME --force || true